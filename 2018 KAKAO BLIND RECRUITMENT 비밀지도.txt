* 문제 설명
1. 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 공백(" ) 또는벽(#") 두 종류로 이루어져 있다.
2. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.
3. 지도 1과 지도 2는 각각 정수 배열로 암호화되어 있다.
4. 암호화된 배열은 지도의 각 가로줄에서 벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.

* 제한사항
1 ≦ n ≦ 16
arr1, arr2는 길이 n인 정수 배열로 주어진다.
정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다.

--------------------------------------------------------------------------

class Solution {
    public String[] solution(int n, int[] arr1, int[] arr2) {

        String[] temp = new String[n];
        String[] answer = new String[n];

        for(int i = 0 ; i < n ; i++) {
            temp[i] = Integer.toBinaryString(arr1[i] | arr2[i]);

            for (int j = 0; j < n; j++) {
                if(temp[i].length() < n) {
                    temp[i] = "0" + temp[i];
                }
            }

        }

        for (int i = 0; i < temp.length; i++) {
            String str = temp[i].replace('1', '#');
            String str2 = str.replace('0', ' ');
            answer[i] = str2;

            System.out.println(answer[i]);
        }
        return answer;
    }
}